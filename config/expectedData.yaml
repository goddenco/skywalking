# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
segmentItems:
  - serviceName: skywalking
    segmentSize: gt 1
    segments:
      - segmentId: not null
        spans:
          - operationName: com.lenovo.skywalking.service.TestService.testAnnotatedException
            parentSpanId: 0
            spanId: 1
            spanLayer: Unknown
            startTime: nq 0
            endTime: nq 0
            componentId: 93
            isError: false
            spanType: Local
            peer: ''
            skipAnalysis: false
            logs:
              - logEvent:
                  - { key: event, value: error }
                  - { key: error.kind, value: com.lenovo.skywalking.exception.TestAnnotatedException }
                  - { key: message, value: '' }
                  - key: stack
                    value: not null
          - operationName: com.lenovo.skywalking.service.TestService.testListedException
            parentSpanId: 0
            spanId: 2
            spanLayer: Unknown
            startTime: nq 0
            endTime: nq 0
            componentId: 93
            isError: false
            spanType: Local
            peer: ''
            skipAnalysis: false
            logs:
              - logEvent:
                  - { key: event, value: error }
                  - { key: error.kind, value: com.lenovo.skywalking.exception.TestListedException }
                  - { key: message, value: '' }
                  - key: stack
                    value: not null
          - operationName: com.lenovo.skywalking.service.TestService.testHierarchyListedException
            parentSpanId: 0
            spanId: 3
            spanLayer: Unknown
            startTime: nq 0
            endTime: nq 0
            componentId: 93
            isError: false
            spanType: Local
            peer: ''
            skipAnalysis: false
            logs:
              - logEvent:
                  - { key: event, value: error }
                  - { key: error.kind, value: com.lenovo.skywalking.exception.TestHierarchyListedException }
                  - { key: message, value: '' }
                  - key: stack
                    value: not null
          - operationName: com.lenovo.skywalking.service.TestService.testException
            parentSpanId: 0
            spanId: 4
            spanLayer: Unknown
            startTime: nq 0
            endTime: nq 0
            componentId: 93
            isError: true
            spanType: Local
            peer: ''
            skipAnalysis: false
            logs:
              - logEvent:
                  - { key: event, value: error }
                  - { key: error.kind, value: com.lenovo.skywalking.exception.TestException }
                  - { key: message, value: '' }
                  - key: stack
                    value: not null
          - operationName: com.lenovo.skywalking.service.TestService.testRecursiveException
            parentSpanId: 0
            spanId: 5
            spanLayer: Unknown
            startTime: nq 0
            endTime: nq 0
            componentId: 93
            isError: false
            spanType: Local
            peer: ''
            skipAnalysis: false
            logs:
              - logEvent:
                  - { key: event, value: error }
                  - { key: error.kind, value: com.lenovo.skywalking.exception.TestException }
                  - { key: message, value: com.lenovo.skywalking.exception.TestListedException }
                  - key: stack
                    value: not null
          - operationName: GET:/case/exceptionchecker
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: nq 0
            endTime: nq 0
            componentId: 14
            isError: false
            spanType: Entry
            peer: ''
            skipAnalysis: false
            tags:
              - { key: url, value: 'http://localhost:8080/case/exceptionchecker' }
              - { key: http.method, value: GET }

